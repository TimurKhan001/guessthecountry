{"version":3,"sources":["constants/action-types.js","reducers/index.js","Header.js","reportWebVitals.js","Main.js","App.js","Options.js","Switch.js","index.js"],"names":["DIFFICULTY","MAX_POINTS","initialState","maxpoints","variants","rootReducer","state","action","type","newState","number","anotherState","difficulty","Header","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Main","to","App","props","fetch","window","data","json","result","sort","Math","random","slice","chosen","setState","answer","floor","correct","incorrect","handleClick","bind","this","e","target","innerText","name","alert","prevState","prevProps","showCountries","map","item","index","style","padding","height","src","flag","alt","onClick","cursor","display","margin","Component","connect","reduxState","Options","updateMaxPoints","dispatch","value","handleChange","selected","onChange","id","for","Game","OptionsMenu","MainMenu","SwitchGame","exact","path","component","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","Switch","document","getElementById"],"mappings":"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","file":"static/js/main.3d932c7b.chunk.js","sourcesContent":["export const DIFFICULTY = \"DIFFICULTY\";\nexport const MAX_POINTS = \"MAX_POINTS\";\n","import { DIFFICULTY, MAX_POINTS } from '../constants/action-types';\n\nconst initialState = {\n    maxpoints: 5,\n    variants: 4\n};\n\n\nfunction rootReducer(state = initialState, action) {\n    switch (action.type) {\n        case MAX_POINTS:\n            var newState = { ...state };\n            return {\n                ...newState,\n                maxpoints: action.number\n            };\n        case DIFFICULTY:\n            var anotherState = { ...state };\n            return {\n                ...anotherState,\n                variants: action.difficulty\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport default rootReducer;\n","import React, { Component } from 'react';\nimport \"./Header.css\";\n\nconst Header = () => {\n\n    return (\n        <header className=\"header__top\"> \n            <h1 className=\"header__title\">\n                Guess the country flag\n            </h1>\n        </header>\n    );\n};\n\nexport default Header;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport \"./Main.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Main = () => (\n    <section className=\"main__menu\">\n        \n        <div className=\"main__button\">\n            <h2><Link className=\"main__button-text\" to=\"/game\">Play</Link></h2>\n        </div>\n        \n        <div className=\"main__button\">\n            <h2><Link className=\"main__button-text\" to=\"/options\">Options</Link></h2>\n        </div>\n        \n        <div className=\"main__info\">\n            <p className=\"main__info-text\">\n                Can you identify a country by it’s flag?\n                Click “play” to try!<br/>\n                You can change the difficulty in the options menu. \n            </p>\n        </div>\n    </section>\n\n);\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chosen: [],\n            answer: {},\n            correct: 0,\n            incorrect: 0\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    fetch = () => {\n        let variants = this.props.variants;\n        const url = \"https://restcountries.eu/rest/v2/all\";\n        window.fetch(url)\n            .then(data => data.json())\n            .then(result => result.sort(() => Math.random() - Math.random()).slice(0, variants))\n            .then(chosen => this.setState({ chosen: chosen, answer: chosen[Math.floor(Math.random() * variants)] }));\n    }\n\n    componentDidMount() {\n        this.fetch();\n    }\n\n    handleClick(e) {\n        if (e.target.innerText === this.state.answer.name) {\n            alert(\"Correct\");\n            this.fetch();\n            this.setState(prevState => ({\n                correct: prevState.correct + 1\n            }));\n        }\n        else {\n            alert(`No, the correct answer is ${this.state.answer.name}`);\n            this.fetch();\n            this.setState(prevState => ({\n                incorrect: prevState.incorrect + 1\n            }));\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.correct === this.props.maxpoints) {\n            alert(\"You won the game\");\n            this.setState({ correct: 0, incorrect: 0 });\n        }\n        else if (this.state.incorrect === this.props.maxpoints) {\n            alert(\"Sorry you lost\");\n            this.setState({ correct: 0, incorrect: 0 });\n        }\n    }\n\n\n    render() {\n        let countries = this.state.chosen;\n        let showCountries = countries.map((item, index) => (\n            <div className=\"game__coutnry-name\" style={{padding: \"20px\"}} key={index}><h2>{item.name}</h2></div>\n        ));\n\n        return (\n            <div className=\"App\">\n            \n                <div className=\"game__image\">\n                <img style={{height: \"25vh\"}} src={this.state.answer.flag} alt=\"country flag\"/>\n                </div>\n                \n                <div className=\"game__countries\">\n                <div onClick={this.handleClick} style={{cursor: \"pointer\"}}>{showCountries}</div>\n                </div>\n                \n                <h3 style={{display: \"inline-block\", margin: \"1rem\"}}>Correct {this.state.correct}</h3>\n                <h3 style={{display: \"inline-block\", margin: \"1rem\"}}>Wrong {this.state.incorrect}</h3>\n                <h3 style={{display: \"inline-block\", margin: \"1rem\"}}>Max Score {this.props.maxpoints}</h3>\n                \n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(reduxState) {\n    return {\n        maxpoints: reduxState.maxpoints,\n        variants: reduxState.variants\n    };\n}\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './Options.css';\nimport { Link } from \"react-router-dom\";\n\nclass Options extends Component {\n\n    updateMaxPoints = (e) => {\n        this.props.dispatch({\n            type: \"MAX_POINTS\",\n            number: +e.target.value\n        });\n    }\n\n    handleChange = (e) => {\n        switch (e.target.value) {\n            case \"easy\":\n                this.props.dispatch({\n                    type: \"DIFFICULTY\",\n                    difficulty: 3\n                });\n                break;\n            case \"medium\":\n                this.props.dispatch({\n                    type: \"DIFFICULTY\",\n                    difficulty: 4\n                });\n                break;\n            case \"hard\":\n                this.props.dispatch({\n                    type: \"DIFFICULTY\",\n                    difficulty: 5\n                });\n                break;\n        }\n    }\n\n    render() {\n        let selected;\n        switch (this.props.variants) {\n            case 3:\n                selected = <div>\n                        <select onChange={this.handleChange} name=\"diffuculty\" id=\"difficulty\">\n                        <option selected=\"selected\" value=\"easy\">Easy</option>\n                        <option value=\"medium\">Medium</option>\n                        <option value=\"hard\">Hard</option>\n                        </select>\n                        </div>\n                break;\n            case 4:\n                selected = <div>\n                        <select onChange={this.handleChange} name=\"diffuculty\" id=\"difficulty\">\n                        <option value=\"easy\">Easy</option>\n                        <option selected=\"selected\" value=\"medium\">Medium</option>\n                        <option value=\"hard\">Hard</option>\n                        </select>\n                        </div>\n                break;\n            case 5:\n                selected = <div>\n                        <select onChange={this.handleChange} name=\"diffuculty\" id=\"difficulty\">\n                        <option value=\"easy\">Easy</option>\n                        <option selected=\"selected\" value=\"medium\">Medium</option>\n                        <option selected=\"selected\" value=\"hard\">Hard</option>\n                        </select>\n                        </div>\n                break;\n        }\n\n        return (\n            <section className=\"options\">\n                <h2 className=\"options__heading\">Options</h2>\n                \n                <label for=\"maxpoints\">Choose a maximum score </label>\n                <input id=\"maxpoints\" type=\"number\" value={this.props.maxpoints} onChange={this.updateMaxPoints}/>\n                \n                <label for=\"difficulty\">Choose the difficulty:</label>\n\n                {selected}\n                \n                <div className=\"main__button\">\n                    <h2><Link className=\"main__button-text\" to=\"/game\">Play</Link></h2>\n                </div>\n        </section>\n        );\n    }\n}\n\nfunction mapStateToProps(reduxState) {\n    return {\n        maxpoints: reduxState.maxpoints,\n        variants: reduxState.variants\n    };\n}\n\n\nexport default connect(mapStateToProps)(Options);\n","import React, { Component } from 'react';\nimport {\n    Switch,\n    Route\n}\nfrom 'react-router-dom';\nimport App from './App';\nimport Main from './Main';\nimport Options from './Options';\n\nconst Game = () => (\n    <App />\n);\n\nconst OptionsMenu = () => (\n    <Options />\n);\n\nconst MainMenu = () => (\n    <Main />\n);\n\nconst SwitchGame = () => (\n    <Switch>\n            \n        <Route exact path=\"/\" component={MainMenu} />\n        <Route path=\"/game\" component={Game} />\n        <Route path=\"/options\" component={OptionsMenu} />\n            \n    </Switch>\n);\n\nexport default SwitchGame;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers';\nimport './index.css';\nimport Header from \"./Header\";\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n}\nfrom 'react-router-dom';\nimport Main from \"./Main\";\nimport SwitchGame from \"./Switch\";\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store={store}>\n  <Router>\n    <Header />\n    <SwitchGame />\n  </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}